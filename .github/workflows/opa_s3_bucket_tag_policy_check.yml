name: OPA S3 Bucket Tag Policy Check

on:
  push:
    branches: [main]           # Run workflow on push to main branch
  pull_request:
    branches: [main]           # Run workflow on PRs targeting main branch
  workflow_dispatch:           # Allow manual trigger from GitHub Actions UI

jobs:
  opa-policy-check:
    runs-on: ubuntu-latest     # Use the latest Ubuntu runner

    steps:
      # Step 1: Checkout the repository code
      - name: Checkout code
        uses: actions/checkout@v4

      # Step 2: Set up Node.js for CDK and dependencies
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      # Step 3: Install Node.js dependencies (CDK, etc.)
      - name: Install dependencies
        run: npm install

      # Step 4: Ensure cdk.out directory exists for output
      - name: Ensure cdk.out directory exists
        run: mkdir -p cdk.out

      # Step 5: Synthesize the CloudFormation template from CDK
      - name: Synthesize CloudFormation template
        run: npx cdk synth > cdk.out/template.yaml

      # Step 6: Install OPA CLI for policy evaluation
      - name: Install OPA CLI
        run: |
          wget https://openpolicyagent.org/downloads/latest/opa_linux_amd64_static
          chmod +x opa_linux_amd64_static
          sudo mv opa_linux_amd64_static /usr/local/bin/opa
          echo "OPA version should be at least v1.5.1"
          opa version

      # Step 7: Convert the synthesized CloudFormation template to OPA input format
      - name: Convert CloudFormation to OPA input (S3 buckets only)
        run: python3 scripts/cfn_to_opa_input.py cdk.out/template.yaml opa_input.json

      # Step 8: Run all OPA policies in the 'policies' folder against the input with debug output
      - name: Run all OPA policies in 'policies' folder (with debug output)
        run: |
          for policy in ./policies/*.rego; do
            echo "=============================="
            echo "Testing policy: $policy"
            echo "----- Policy Content -----"
            cat "$policy"
            echo "----- OPA Output -----"
            opa eval --format pretty --fail-defined --data "$policy" --input opa_input.json "data.policies.s3_bucket_tag_violations"
            if [ $? -ne 0 ]; then
              echo "Policy $policy failed. Exiting."
              exit 1
            fi
          done
